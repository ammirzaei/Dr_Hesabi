// <auto-generated />
using System;
using Dr_Hesabi.DataLayers.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dr_Hesabi.DataLayers.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20210713071038_Mig-EmailSupport")]
    partial class MigEmailSupport
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Attachments", b =>
                {
                    b.Property<string>("AttachmentID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("PanelName")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("AttachmentID");

                    b.HasIndex("UserID");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Bests", b =>
                {
                    b.Property<string>("BestID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ParentID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("BestID");

                    b.HasIndex("ParentID");

                    b.ToTable("Bests");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Blogs", b =>
                {
                    b.Property<string>("BlogID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NameWriter")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("Visit")
                        .HasColumnType("int");

                    b.HasKey("BlogID");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Choices", b =>
                {
                    b.Property<string>("ChoiceID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("QuestionID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("ChoiceID");

                    b.HasIndex("QuestionID");

                    b.ToTable("Choices");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Comments", b =>
                {
                    b.Property<string>("CommentID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PanelID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CommentID");

                    b.HasIndex("UserID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Connections", b =>
                {
                    b.Property<string>("ConnectionID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("CommentTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailorPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ConnectionID");

                    b.HasIndex("UserID");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Contents", b =>
                {
                    b.Property<string>("ContentID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MajorID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ParentID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("ContentID");

                    b.HasIndex("MajorID");

                    b.HasIndex("ParentID");

                    b.ToTable("Contents");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Gallerys", b =>
                {
                    b.Property<string>("GalleryID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ParentID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("GalleryID");

                    b.HasIndex("ParentID");

                    b.ToTable("Gallerys");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.LoginTests", b =>
                {
                    b.Property<string>("LoginID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("TestID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("LoginID");

                    b.HasIndex("TestID");

                    b.HasIndex("UserID");

                    b.ToTable("LoginTests");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.MajorTeachers", b =>
                {
                    b.Property<string>("MajorTeacherID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MajorID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("MajorTeacherID");

                    b.HasIndex("MajorID");

                    b.HasIndex("UserID");

                    b.ToTable("MajorTeachers");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Majors", b =>
                {
                    b.Property<string>("MajorID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("MajorID");

                    b.ToTable("Majors");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.News", b =>
                {
                    b.Property<string>("NewsID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("Visit")
                        .HasColumnType("int");

                    b.HasKey("NewsID");

                    b.ToTable("Newses");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.ProfileRequests", b =>
                {
                    b.Property<string>("ProfileRequestID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(350)")
                        .HasMaxLength(350);

                    b.Property<bool?>("IsCondition")
                        .HasColumnType("bit");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ProfileRequestID");

                    b.HasIndex("UserID");

                    b.ToTable("ProfileRequests");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.ProfileStaffs", b =>
                {
                    b.Property<string>("ProfileStaffID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("StaffID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ProfileStaffID");

                    b.HasIndex("StaffID");

                    b.HasIndex("UserID")
                        .IsUnique()
                        .HasFilter("[UserID] IS NOT NULL");

                    b.ToTable("ProfileStaffs");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.ProfileStudents", b =>
                {
                    b.Property<string>("ProfileID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CodeClass")
                        .HasColumnType("int");

                    b.Property<string>("CodeMeli")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<bool?>("IsCondition")
                        .HasColumnType("bit");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ProfileID");

                    b.HasIndex("UserID")
                        .IsUnique()
                        .HasFilter("[UserID] IS NOT NULL");

                    b.ToTable("ProfileStudents");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.QuestionReplys", b =>
                {
                    b.Property<string>("ReplyID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuestionID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ReplyID");

                    b.HasIndex("QuestionID");

                    b.HasIndex("UserID");

                    b.ToTable("QuestionReplys");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Questions", b =>
                {
                    b.Property<string>("QuestionID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("MethodInput")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<string>("TestID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("QuestionID");

                    b.HasIndex("TestID");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.ReplyDescriptives", b =>
                {
                    b.Property<string>("DescriptiveID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<bool?>("IsCondition")
                        .HasColumnType("bit");

                    b.Property<string>("ReplyID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.HasKey("DescriptiveID");

                    b.HasIndex("ReplyID");

                    b.ToTable("ReplyDescriptives");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.ReplyOptional", b =>
                {
                    b.Property<string>("OptionalID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ChoiceID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsCondition")
                        .HasColumnType("bit");

                    b.Property<string>("ReplyID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("OptionalID");

                    b.HasIndex("ChoiceID");

                    b.HasIndex("ReplyID");

                    b.ToTable("ReplyOptionals");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.RoleSelects", b =>
                {
                    b.Property<string>("SelectID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RoleID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("SelectID");

                    b.HasIndex("RoleID");

                    b.HasIndex("UserID");

                    b.ToTable("RoleSelects");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Roles", b =>
                {
                    b.Property<string>("RoleID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Setting", b =>
                {
                    b.Property<string>("SettingID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("EmailSupport")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("GuideStudent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuideTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("History")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgCodeQR")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ImgHistory")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ImgLogo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NameSite")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("NameSite2")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("PasswordEmail")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Targets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telegram")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("SettingID");

                    b.ToTable("Setting");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Sliders", b =>
                {
                    b.Property<string>("SlideID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("SlideID");

                    b.ToTable("Sliders");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Staffs", b =>
                {
                    b.Property<string>("StaffID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ParentID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("StaffID");

                    b.HasIndex("ParentID");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Surveys", b =>
                {
                    b.Property<string>("SurveyID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CountStar")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPermission")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("SurveyID");

                    b.ToTable("Surveys");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.SurveysQuestions", b =>
                {
                    b.Property<string>("QuestionID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<float>("SumVote")
                        .HasColumnType("real");

                    b.Property<string>("SurveyID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("QuestionID");

                    b.HasIndex("SurveyID");

                    b.ToTable("SurveysQuestions");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.SurveysVotes", b =>
                {
                    b.Property<string>("VoteID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuestionID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Vote")
                        .HasColumnType("int");

                    b.HasKey("VoteID");

                    b.HasIndex("QuestionID");

                    b.HasIndex("UserID");

                    b.ToTable("SurveysVotes");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.TestClasses", b =>
                {
                    b.Property<string>("TestClassID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Class")
                        .HasColumnType("int");

                    b.Property<string>("TestID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("TestClassID");

                    b.HasIndex("TestID");

                    b.ToTable("TestClasses");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.TestRequests", b =>
                {
                    b.Property<string>("TestRequestID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("TestID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("TestRequestID");

                    b.HasIndex("TestID");

                    b.HasIndex("UserID");

                    b.ToTable("TestRequests");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Tests", b =>
                {
                    b.Property<string>("TestID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNegative")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRandom")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUltimate")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("TestID");

                    b.HasIndex("UserID");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.TestsUltimate", b =>
                {
                    b.Property<string>("UltimateID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CountFalse")
                        .HasColumnType("int");

                    b.Property<int>("CountNull")
                        .HasColumnType("int");

                    b.Property<int>("CountTrue")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReplyNull")
                        .HasColumnType("int");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<string>("TestID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<float>("TestScore")
                        .HasColumnType("real");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("UltimateID");

                    b.HasIndex("TestID");

                    b.HasIndex("UserID");

                    b.ToTable("TestsUltimate");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Users", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ActiveCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.VisitsDocument", b =>
                {
                    b.Property<string>("VisitID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IP")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("TableID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("VisitID");

                    b.ToTable("VisitsDocuments");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Attachments", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Users", "Users")
                        .WithMany("Attachments")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Bests", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Bests", "Bests2")
                        .WithMany("Bests1")
                        .HasForeignKey("ParentID");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Choices", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Questions", "Questions")
                        .WithMany("Choices")
                        .HasForeignKey("QuestionID");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Comments", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Users", "Users")
                        .WithMany("Comments")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Connections", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Users", "Users")
                        .WithMany("Connections")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Contents", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Majors", "Majors")
                        .WithMany("Contents")
                        .HasForeignKey("MajorID");

                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Contents", "Contents1")
                        .WithMany("Contents2")
                        .HasForeignKey("ParentID");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Gallerys", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Gallerys", "Gallery2")
                        .WithMany("Gallery1")
                        .HasForeignKey("ParentID");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.LoginTests", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Tests", "Tests")
                        .WithMany("LoginTests")
                        .HasForeignKey("TestID");

                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Users", "Users")
                        .WithMany("LoginTests")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.MajorTeachers", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Majors", "Majors")
                        .WithMany("MajorTeachers")
                        .HasForeignKey("MajorID");

                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Users", "Users")
                        .WithMany("MajorTeachers")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.ProfileRequests", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Users", "Users")
                        .WithMany("ProfileRequests")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.ProfileStaffs", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Staffs", "Staffs")
                        .WithMany("ProfileStaffs")
                        .HasForeignKey("StaffID");

                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Users", "Users")
                        .WithOne("ProfileStaffs")
                        .HasForeignKey("Dr_Hesabi.DataLayers.Entity.ProfileStaffs", "UserID");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.ProfileStudents", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Users", "Users")
                        .WithOne("ProfileStudents")
                        .HasForeignKey("Dr_Hesabi.DataLayers.Entity.ProfileStudents", "UserID");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.QuestionReplys", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Questions", "Questions")
                        .WithMany("QuestionReplys")
                        .HasForeignKey("QuestionID");

                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Users", "Users")
                        .WithMany("QuestionReplys")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Questions", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Tests", "Tests")
                        .WithMany("Questions")
                        .HasForeignKey("TestID");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.ReplyDescriptives", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.QuestionReplys", "QuestionReplys")
                        .WithMany("ReplyDescriptives")
                        .HasForeignKey("ReplyID");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.ReplyOptional", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Choices", "Choices")
                        .WithMany("ReplyOptionals")
                        .HasForeignKey("ChoiceID");

                    b.HasOne("Dr_Hesabi.DataLayers.Entity.QuestionReplys", "QuestionReply")
                        .WithMany("ReplyOptionals")
                        .HasForeignKey("ReplyID");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.RoleSelects", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Roles", "Roles")
                        .WithMany("RoleSelects")
                        .HasForeignKey("RoleID");

                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Users", "Users")
                        .WithMany("RoleSelects")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Staffs", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Staffs", "Staffs2")
                        .WithMany("Staffs1")
                        .HasForeignKey("ParentID");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.SurveysQuestions", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Surveys", "Surveys")
                        .WithMany("SurveysQuestions")
                        .HasForeignKey("SurveyID");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.SurveysVotes", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.SurveysQuestions", "SurveysQuestions")
                        .WithMany("SurveysVotes")
                        .HasForeignKey("QuestionID");

                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Users", "Users")
                        .WithMany("SurveysVotes")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.TestClasses", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Tests", "Tests")
                        .WithMany("TestClasses")
                        .HasForeignKey("TestID");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.TestRequests", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Tests", "Tests")
                        .WithMany("TestRequests")
                        .HasForeignKey("TestID");

                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Users", "Users")
                        .WithMany("TestRequests")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.Tests", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Users", "Users")
                        .WithMany("Tests")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("Dr_Hesabi.DataLayers.Entity.TestsUltimate", b =>
                {
                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Tests", "Tests")
                        .WithMany("TestsUltimate")
                        .HasForeignKey("TestID");

                    b.HasOne("Dr_Hesabi.DataLayers.Entity.Users", "Users")
                        .WithMany("TestsUltimate")
                        .HasForeignKey("UserID");
                });
#pragma warning restore 612, 618
        }
    }
}
